openapi: 3.0.0
info:
  title: Recipes API
  description: Application which allows users to manage their favourite recipes.
  version: 0.0.1
servers:
  - url: https://sayagain.app/api
    description: Main (production) server
  - url: http://localhost:8002/api
    description: Localhost (dev) server
tags:
  - name: recipe
    description: Everything about your Recipes
security:
  - basicAuth: []
paths:
  /recipes:
    post:
      security:
        - basicAuth: []
      tags:
        - recipe
      summary: Add a new recipe
      operationId: postRecipe
      requestBody:
        description: Recipe
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /recipes/{recipeId}:
    get:
      security:
        - basicAuth: []
      tags:
        - recipe
      summary: Find recipe by id
      operationId: getRecipe
      parameters:
        - name: recipeId
          in: path
          description: Recipe Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    put:
      security:
        - basicAuth: []
      tags:
        - recipe
      summary: Update an existing recipe
      operationId: putRecipe
      parameters:
        - name: recipeId
          in: path
          description: Recipe Id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Successful operation
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      security:
        - basicAuth: []
      tags:
        - recipe
      summary: Delete an existing recipe
      operationId: deleteRecipe
      parameters:
        - name: recipeId
          in: path
          description: Recipe Id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /recipes/search:
    post:
      security:
        - basicAuth: []
      tags:
        - recipe
      summary: Find recipes by search criteria
      operationId: findRecipes
      requestBody:
        description: Search criteria
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCriteria'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Ingredient:
      title: Ingredient
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: potatoes
    Recipe:
      title: Recipe
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
          example: Potato Pancakes
        description:
          type: string
          example: Finely grate potatoes and onion into a large bowl. Drain off any excess liquid.
        servings:
          type: integer
          example: 2
        vegetarian:
          type: boolean
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
    SearchCriteria:
      title: SearchCriteria
      type: object
      properties:
        servings:
          type: integer
          example: 2
        vegetarian:
          type: boolean
        includeIngredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
        excludeIngredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
        keyword:
          type: string
          example: grill
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string